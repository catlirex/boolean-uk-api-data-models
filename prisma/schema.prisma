// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount", "orderByRelation", "referentialActions"]
}

model Designer {
  id      Int      @id @default(autoincrement())
  name    String
  bio     String
  outfits Outfit[]
}

model Outfit {
  id          Int        @id @default(autoincrement())
  name        String
  price       Int
  season      String
  designer_id Int
  designer    Designer   @relation(fields: [designer_id], references: [id], onDelete: Cascade)
  model_id    Int?
  model       Model?     @relation(fields: [model_id], references: [id])
  event_id    Int?
  event       Event?     @relation(fields: [event_id], references: [id])
  sale_record Purchase[]
}

model Model {
  id      Int      @id @default(autoincrement())
  name    String
  age     Int
  height  Int
  outfits Outfit[]
}

model Event {
  id      Int           @id @default(autoincrement())
  date    DateTime
  address String
  name    String
  outfits Outfit[]
  guests  Event_guest[]
}

model Guest {
  id       Int           @id @default(autoincrement())
  name     String
  events   Event_guest[]
  purchase Purchase[]
}

model Event_guest {
  id       Int   @id @default(autoincrement())
  event_id Int
  event    Event @relation(fields: [event_id], references: [id], onDelete: Cascade)
  guest_id Int
  guest    Guest @relation(fields: [guest_id], references: [id], onDelete: Cascade)
}

model Purchase {
  id        Int    @id @default(autoincrement())
  quantity  Int
  price     Int
  outfit_id Int
  outfit    Outfit @relation(fields: [outfit_id], references: [id])
  guest_id  Int
  guest     Guest  @relation(fields: [guest_id], references: [id], onDelete: Cascade)
}
